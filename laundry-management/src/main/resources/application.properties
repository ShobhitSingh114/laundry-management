spring.application.name=laundry-management

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/laundry_management?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# ?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
	# It will:
		#Add missing tables or columns
		#Not delete anything (like dropping tables or columns)
spring.jpa.hibernate.ddl-auto=update
	# tells Spring Boot to log the actual SQL statements that Hibernate executes
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwtSecret=laundrySecretKeyThatIsAtLeast256BitsLongForHS512Algorithmasdffgq
# 7days
# 1hr = 3600000 
app.jwtExpirationInMs=604800000 


# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=shobhitsingh1149201@gmail.com
spring.mail.password=meiw ezcf wmuk fltf
	# configuring secure email sending using SMTP in Spring Boot
	# enables SMTP authentication
spring.mail.properties.mail.smtp.auth=true
	# enables STARTTLS, which is a way to secure the connection between your app and the email server 
	# using encryption.
spring.mail.properties.mail.smtp.starttls.enable=true

# Server Configuration
server.port=8080

# Razorpay Configuration
# razorpay.key.id=your_razorpay_key_id
# razorpay.key.secret=your_razorpay_key_secret

# Stripe Configuration
stripe.secret.key=sk_test_51Rto4z3GeNEP7072T9wE8M389RtBpBZnsBQJAyjbBVuaFmnh4eWIGMN8f0ZTAkRv5tb0Ak3HJlSCijOrxlVhrkTo00K49S2ie2
stripe.publishable.key=pk_test_51Rto4z3GeNEP7072vmOUuA01S5lSyYNj8tfeu4mJcwZe09l746EYIUR3eJwgAMpfqdxOIwEAY6wCVGuR5UsTZWbz00o1dzkqKU
stripe.webhook.secret=whsec_your_webhook_secret_here

